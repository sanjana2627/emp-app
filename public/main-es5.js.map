{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/filterout.pipe.ts","webpack:///src/app/popup/popup.component.ts","webpack:///src/app/popup/popup.component.html","webpack:///src/app/sidenav/sidenav.component.ts","webpack:///src/app/sidenav/sidenav.component.html","webpack:///src/app/topnav/topnav.component.ts","webpack:///src/app/topnav/topnav.component.html","webpack:///src/app/util.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EmployeeListComponent","httpClient","modalService","util","employeesList","searchText","itemsInPage","getEmployees","announceEmployeeAddedSource","subscribe","obj","get","response","err","console","log","open","item","_id","dpModalInstance","componentInstance","employeeObj","showAddNewEmployee","FilteroutPipe","items","filter","itemsPerpage","Object","length","Array","isArray","filterKeys","resp","some","keyName","RegExp","test","slice","name","PopupComponent","activeModal","emptyObj","firstName","lastName","dob","gender","role","contactNumber","address","basicAllowance","fixedAllowance","mappingObj","JSON","parse","stringify","method","url","dismiss","announceEmployeeAdded","addNewEmployee","SidenavComponent","TopnavComponent","UtilService","empObj","next","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"employees\", component: EmployeeListComponent },\r\n  { path: \"\", redirectTo: \"/employees\", pathMatch: \"full\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","<app-topnav></app-topnav>\r\n<div id=\"layoutSidenav\">\r\n  <app-sidenav></app-sidenav>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport { TopnavComponent } from './topnav/topnav.component';\r\nimport { SidenavComponent } from './sidenav/sidenav.component';\r\nimport { PopupComponent } from './popup/popup.component';\r\nimport { FilteroutPipe } from './filterout.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeeListComponent,\r\n    TopnavComponent,\r\n    SidenavComponent,\r\n    PopupComponent,\r\n    FilteroutPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PopupComponent } from '../popup/popup.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UtilService } from '../util.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.css']\r\n})\r\nexport class EmployeeListComponent implements OnInit {\r\n\r\n  constructor(private httpClient: HttpClient, private modalService: NgbModal, private util: UtilService) { }\r\n\r\n  employeesList: any = [];\r\n  searchText = \"\";\r\n  itemsInPage = \"10\";\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployees();\r\n    this.util.announceEmployeeAddedSource.subscribe(obj => {\r\n      this.getEmployees();\r\n    })\r\n  }\r\n\r\n  getEmployees() {\r\n    this.httpClient.get(\"/api/employees\").subscribe((response: any) => {\r\n      this.employeesList = response;\r\n    }, err => {\r\n      console.log(\"Error in getting /api/employees: \", err);\r\n    })\r\n  }\r\n\r\n  showAddNewEmployee() {\r\n    this.modalService.open(PopupComponent);\r\n  }\r\n  deleteEmployee(item) {\r\n    this.httpClient.delete(`/api/employees/${item._id}`).subscribe((response: any) => {\r\n      this.getEmployees();\r\n    })\r\n  }\r\n  editEmployee(item) {\r\n    const dpModalInstance = this.modalService.open(PopupComponent);\r\n    dpModalInstance.componentInstance.employeeObj = item;\r\n  }\r\n}\r\n","<div id=\"layoutSidenav_content\">\r\n    <main>\r\n        <div class=\"container-fluid\">\r\n            <h1 class=\"mt-4\">Employees List\r\n                <input class=\"btn btn-primary\" type=\"button\" value=\"Add New\" (click)=\"showAddNewEmployee()\" style=\"float: right;\">\r\n            </h1>\r\n            <div class=\"card mb-4\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n                        <select [(ngModel)]=\"itemsInPage\" style=\"float: left;\">\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"25\">25</option>\r\n                            <option value=\"50\">50</option>\r\n                            <option value=\"100\">100</option>\r\n                        </select>\r\n                        <input type=\"text\" [(ngModel)]=\"searchText\" placeholder=\"Search..\" class=\"search-text\" />\r\n                        <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>DOB</th>\r\n                                    <th>Gender</th>\r\n                                    <th>Contact No</th>\r\n                                    <th>Address</th>\r\n                                    <th>Role</th>\r\n                                    <th>Basic</th>\r\n                                    <th>Fixed</th>\r\n                                    <th>DA</th>\r\n                                    <th>TA</th>\r\n                                    <th>Tax</th>\r\n                                    <th>Total</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr class=\"output-rows\" *ngFor=\"let item of employeesList | filterout:{firstName:searchText,lastName:searchText,dob:searchText,gender:searchText,contactNumber:searchText,address:searchText,role:searchText} : itemsInPage; let i=index;\">\r\n                                    <td>{{item.firstName}} {{item.lastName}}</td>\r\n                                    <td>{{item.dob | date:'dd-MMM-yyyy'}}</td>\r\n                                    <td>{{item.gender | titlecase}}</td>\r\n                                    <td>{{item.contactNumber}}</td>\r\n                                    <td>{{item.address}}</td>\r\n                                    <td>{{item.role | titlecase}}</td>\r\n                                    <td>{{item.basicAllowance.toFixed(2)}}</td>\r\n                                    <td>{{item.fixedAllowance.toFixed(2)}}</td>\r\n                                    <td>{{item.dearnessAllowance.toFixed(2)}}</td>\r\n                                    <td>{{item.travelAllowance.toFixed(2)}}</td>\r\n                                    <td>{{item.tax.toFixed(2)}}</td>\r\n                                    <td>{{item.total.toFixed(2)}}</td>\r\n                                    <td>\r\n                                        <span class=\"float-right mr-1\" (click)=\"deleteEmployee(item)\">\r\n                                            <i class=\"fas fa-trash\" title=\"Delete\" style=\"cursor: pointer;\"></i>\r\n                                        </span>\r\n                                        <span class=\"float-right mr-3\" (click)=\"editEmployee(item)\">\r\n                                            <i class=\"fas fa-pencil-alt\" title=\"Edit\" style=\"cursor: pointer;\"></i>\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr class=\"empty-rows\" *ngIf=\"employeesList.length==0\">\r\n                                    <td colspan=\"13\" style=\"text-align:center;\">No records found!</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterout'\r\n})\r\nexport class FilteroutPipe implements PipeTransform {\r\n\r\n  transform(items: any, filter?: any, itemsPerpage?: any): any {\r\n    if (!filter || typeof filter != \"object\" || Object.keys(filter).length == 0) {\r\n      return items;\r\n    }\r\n    if (!Array.isArray(items)) {\r\n      return items;\r\n    }\r\n    if (filter && Array.isArray(items)) {\r\n      let filterKeys = Object.keys(filter);\r\n      var resp = items.filter(item => {\r\n        return filterKeys.some((keyName) => {\r\n          return new RegExp(filter[keyName], 'gi').test(item[keyName]) || !filter[keyName];\r\n        });\r\n      });\r\n      if (itemsPerpage) {\r\n        return resp.slice(0, itemsPerpage);\r\n      }\r\n      return resp;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UtilService } from '../util.service';\r\n\r\n@Component({\r\n  selector: 'app-popup',\r\n  templateUrl: './popup.component.html',\r\n  styleUrls: ['./popup.component.css']\r\n})\r\nexport class PopupComponent implements OnInit {\r\n  @Input() employeeObj = null;\r\n  emptyObj = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    gender: \"male\",\r\n    role: \"\",\r\n    contactNumber: \"\",\r\n    address: \"\",\r\n    basicAllowance: \"\",\r\n    fixedAllowance: \"\"\r\n  }\r\n  mappingObj: any = {};\r\n\r\n  constructor(public activeModal: NgbActiveModal, private httpClient: HttpClient, private util: UtilService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.employeeObj) {\r\n      this.mappingObj = JSON.parse(JSON.stringify(this.employeeObj));\r\n    } else {\r\n      this.mappingObj = JSON.parse(JSON.stringify(this.emptyObj));\r\n    }\r\n  }\r\n\r\n  addNewEmployee() {\r\n    let method = \"post\", url = `/api/employees`;\r\n    if (this.mappingObj._id) {\r\n      method = \"put\";\r\n      url = `/api/employees/${this.mappingObj._id}`;\r\n    }\r\n    this.httpClient[method](url, this.mappingObj).subscribe((response: any) => {\r\n      this.activeModal.dismiss('Cross click');\r\n      this.util.announceEmployeeAdded(this.mappingObj);\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Add Employee</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-lg-12 col-md-12\">\r\n            <div class=\"card shadow border-0\">\r\n                <div class=\"card-body\">\r\n                    <form role=\"form\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"first-name\">First Name</label>\r\n                                    <input type=\"text\" id=\"first-name\" class=\"form-control form-control-alternative\" placeholder=\"First Name\" [(ngModel)]=\"mappingObj.firstName\"\r\n                                        name=\"first-name\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"last-name\">Last Name</label>\r\n                                    <input type=\"text\" id=\"last-name\" class=\"form-control form-control-alternative\" placeholder=\"Last Name\" [(ngModel)]=\"mappingObj.lastName\"\r\n                                        name=\"last-name\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"dob\">DOB</label>\r\n                                    <input type=\"date\" id=\"dob\" class=\"form-control form-control-alternative\" placeholder=\"DOB\" [(ngModel)]=\"mappingObj.dob\"\r\n                                        name=\"dob\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"gender\">Gender</label>\r\n                                    <select id=\"dob\" class=\"form-control form-control-alternative\" [(ngModel)]=\"mappingObj.gender\" name=\"gender\">\r\n                                        <option value=\"male\">Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"role\">Role</label>\r\n                                    <select id=\"dob\" class=\"form-control form-control-alternative\" [(ngModel)]=\"mappingObj.role\" name=\"role\">\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"engineer\">Engineer</option>\r\n                                        <option value=\"lead\">Lead</option>\r\n                                        <option value=\"manager\">Manager</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"contactNumber\">Contact Number</label>\r\n                                    <input type=\"text\" id=\"contactNumber\" class=\"form-control form-control-alternative\" placeholder=\"Contact Number\" [(ngModel)]=\"mappingObj.contactNumber\"\r\n                                        name=\"contactNumber\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"address\">Address</label>\r\n                                    <textarea style=\"resize: none;\" id=\"address\" class=\"form-control form-control-alternative\" placeholder=\"Address\" [(ngModel)]=\"mappingObj.address\"\r\n                                        name=\"address\">\r\n                                    </textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"basicAllowance\">Basic allowance</label>\r\n                                    <input type=\"number\" id=\"basicAllowance\" class=\"form-control form-control-alternative\" placeholder=\"Basic allowance\" [(ngModel)]=\"mappingObj.basicAllowance\"\r\n                                        name=\"basicAllowance\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label class=\"form-control-label\" for=\"fixedAllowance\">Fixed Allowance</label>\r\n                                    <input type=\"number\" id=\"fixedAllowance\" class=\"form-control form-control-alternative\" placeholder=\"Fixed allowance\" [(ngModel)]=\"mappingObj.fixedAllowance\"\r\n                                        name=\"fixedAllowance\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary my-4\" (click)=\"addNewEmployee()\">\r\n                                {{mappingObj._id ? \"Update\":\"Add\"}}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.css']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"layoutSidenav_nav\">\r\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n        <div class=\"sb-sidenav-menu\">\r\n            <div class=\"nav\">\r\n                <div class=\"sb-sidenav-menu-heading\">Core</div>\r\n                <a class=\"nav-link\" href=\"javascript:void(0)\">\r\n                    <div class=\"sb-nav-link-icon\">\r\n                        <i class=\"fas fa-tachometer-alt\"></i>\r\n                    </div>\r\n                    Dashboard\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-topnav',\r\n  templateUrl: './topnav.component.html',\r\n  styleUrls: ['./topnav.component.css']\r\n})\r\nexport class TopnavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\">Employees management</a>\r\n    <form class=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\r\n        <div class=\"input-group\">\r\n            <input class=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n            <div class=\"input-group-append\">\r\n                <button class=\"btn btn-primary\" type=\"button\">\r\n                    <i class=\"fas fa-search\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <ul class=\"navbar-nav ml-auto ml-md-0\">\r\n        <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" id=\"userDropdown\" href=\"javascript:void(0)\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                aria-expanded=\"false\">\r\n                <i class=\"fas fa-user fa-fw\"></i>\r\n            </a>\r\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n                <a class=\"dropdown-item\" href=\"javascript:void(0)\">Settings</a>\r\n                <a class=\"dropdown-item\" href=\"javascript:void(0)\">Activity Log</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\" href=\"login.html\">Logout</a>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</nav>","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilService {\r\n\r\n  constructor() { }\r\n\r\n  announceEmployeeAddedSource = new Subject<any>();\r\n  announceEmployeeAdded(empObj:any) {\r\n    this.announceEmployeeAddedSource.next(empObj);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}